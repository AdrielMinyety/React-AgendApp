{"version":3,"sources":["components/Form.js","components/Cita.js","components/ListaCitas.js","App.js","index.js"],"names":["stateInicial","cita","cliente","contacto","mensaje","fecha","error","Form","state","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","test","console","log","nuevaCita","id","uuid","props","agendarCita","this","onSubmit","className","onChange","type","placeholder","Component","Cita","eliminarCita","onClick","ListaCitas","citas","length","map","key","App","filter","citasLS","localStorage","getItem","JSON","parse","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52d00052.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport uuid from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst stateInicial = {\r\n    cita : {\r\n        cliente: \"\",\r\n        contacto: \"\",\r\n        mensaje: \"\",\r\n        fecha: \"\"\r\n    },\r\n    error: false\r\n}\r\n\r\nclass Form extends Component {\r\n    state = { ...stateInicial }\r\n    // leer datos\r\n    // read data\r\n    handleChange = e => {\r\n        // console.log(e.target.name + \": \" + e.target.value);\r\n        // guardar datos del usuario\r\n        // save user's data\r\n        this.setState({\r\n            cita: {\r\n                ...this.state.cita,\r\n                [e.target.name] : e.target.value\r\n            }\r\n        })\r\n    }\r\n    // enviar datos del formulario\r\n    // send data from the form\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        // extraer datos del state\r\n        // extract state's data\r\n        const { cliente, contacto, mensaje, fecha } = this.state.cita;\r\n        // validar si estan vacios\r\n        // validate if are empties\r\n        if ( /^\\s+$/.test(cliente) || /^\\s+$/.test(contacto) || /^\\s+$/.test(mensaje) || /^\\s+$/.test(fecha) || cliente ===\"\" || contacto ===\"\" || mensaje ===\"\" || fecha ===\"\") {\r\n            console.log(\"Todos los campos son obligatorios\");\r\n            this.setState({\r\n                error: true\r\n            })\r\n            return;\r\n        }\r\n        // datos para enviar\r\n        // data to send\r\n        const nuevaCita = {...this.state.cita};\r\n        nuevaCita.id = uuid();\r\n        // enviar datos al state de APP\r\n        // send the data to the state's APP\r\n        this.props.agendarCita(nuevaCita);\r\n        // reiniciar state y formularios\r\n        // reset state and form\r\n        this.setState({\r\n            ...stateInicial\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // validar si hay errores\r\n        // validate if there is errors\r\n        const { error } = this.state;        \r\n        return (\r\n            <form \r\n                onSubmit={this.handleSubmit}\r\n            >\r\n            {error ? \r\n                <div className=\"alert alert-danger\">Todos los campos son obligatorios</div>  \r\n            : null}\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        onChange={this.handleChange}\r\n                        value={this.state.cita.cliente} \r\n                        name=\"cliente\" \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Cliente\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        onChange={this.handleChange}\r\n                        value={this.state.cita.contacto} \r\n                        name=\"contacto\" \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Contacto\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        onChange={this.handleChange}\r\n                        value={this.state.cita.mensaje} \r\n                        name=\"mensaje\" \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"DescripciÃ³n o mensaje\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        onChange={this.handleChange}\r\n                        value={this.state.cita.fecha} \r\n                        name=\"fecha\" \r\n                        type=\"date\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Fecha\"/>\r\n                </div>\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"btn text-white btn-block\" \r\n                >Agendar</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nForm.propTypes = {\r\n    agendarCita : PropTypes.func.isRequired \r\n}\r\n\r\nexport default Form;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nCita.propTypes = {\r\n    cita : PropTypes.object.isRequired,\r\n    eliminarCita : PropTypes.func.isRequired\r\n}\r\n\r\nexport default function Cita({cita, eliminarCita}) {\r\n    return (\r\n        <div className=\"card m-2 shadow\">\r\n            <h4 className=\"card-header\">\r\n                <span\r\n                    onClick={() => eliminarCita(cita.id)}\r\n                    className=\"borrar pb-2 mr-1 text-danger\">&times;</span>  \r\n                 {cita.cliente}\r\n            </h4>\r\n            <div className=\"card-body\">\r\n                <p className=\"font-weight-bold\">{cita.contacto}</p>\r\n                <p className=\"text-justify\">{cita.mensaje}</p>\r\n                <small>{cita.fecha}</small>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Cita from './Cita';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListaCitas = ({ citas, eliminarCita }) => (\r\n    <div className=\"bg-light p-2\">        \r\n        {citas.length === 0 ? \r\n            <p className=\"text-center m-0\">No hay citas</p>\r\n        : \r\n            citas.map(cita => (\r\n                <Cita \r\n                    key={cita.id}\r\n                    cita={cita}\r\n                    eliminarCita={eliminarCita}\r\n                />\r\n            ))\r\n        }\r\n    </div>\r\n);\r\n\r\nListaCitas.propTypes = {\r\n    citas : PropTypes.array.isRequired,\r\n    eliminarCita : PropTypes.func.isRequired\r\n}\r\n\r\nexport default ListaCitas;","import React, { Component } from 'react';\n\nimport Form from './components/Form';\nimport ListaCitas from './components/ListaCitas'\n\nclass App extends Component {\n  state = {\n    citas: []\n  }\n\n  agendarCita = nuevaCita => {\n    // copiar state actual\n    // copy the last state \n    const citas = [...this.state.citas, nuevaCita];\n    // actualizar state\n    // update state\n    this.setState({\n      citas\n    })\n  }\n  \n  componentDidMount() {\n    // Cuando el DOM haya sido cargado, imprimir datos del LS\n    // When DOM has been loaded, print data from LS\n    let citasLS = localStorage.getItem(\"citas\");\n    if(citasLS){\n      this.setState({\n        citas: JSON.parse( citasLS )\n      })\n    }    \n  }\n\n  componentDidUpdate() {\n    // por cada vez que se detecte cambios, actualizar LS\n    // each moment the component change, update LS\n    localStorage.setItem(\"citas\", JSON.stringify(this.state.citas));\n  }\n\n  eliminarCita = id => {\n    // obtener state\n    // get state\n    const citasActuales = [...this.state.citas];\n    // eliminar cita\n    // delete cita\n    const citas = citasActuales.filter(cita => cita.id !== id);\n    // actualizar state\n    // update state\n    console.log(citas)\n    this.setState({\n      citas\n    })\n    console.log(\"borrado\");\n  }\n\n  render() {\n    return (\n      <div className=\"App pb-5\">\n          <h1 className=\"text-center text-white py-4\">AgendApp</h1>\n          <div className=\"bg-white py-5\">        \n              <div className=\"row p-3\">\n                <div className=\"col-md-6 pb-5\">\n                  <div className=\"card p-4 shadow\">\n                    <h2 className=\"text-center\">Agendar Cita</h2>\n                    <Form\n                      agendarCita={this.agendarCita}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-6 pb-2\">\n                  <div className=\"card p-1 shadow\">\n                    <h2 className=\"text-center\">Citas</h2>\n                    <ListaCitas \n                      citas={this.state.citas}\n                      eliminarCita={this.eliminarCita}\n                    />\n                  </div>\n                </div>\n              </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}